swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get all transactions for the current month
      description: Retrieves all transactions for the current month, grouped by account.
      parameters:
        - name: accountId
          in: query
          description: ID of the account to filter transactions
          required: false
          type: string
      responses:
        "200":
          description: List of transactions
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized, needs JWT token
        "404":
          description: No accounts found for the given ID
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get transaction details
      description: Retrieves details of a specific transaction.
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction
          required: true
          type: string
      responses:
        "200":
          description: Transaction details
          schema:
            $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized, needs JWT token
        "404":
          description: Transaction not found
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update transaction
      description: Updates the information of a specific transaction.
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Transaction data to update
          required: true
          schema:
            type: object
            properties:
              description:
                type: string
              amount:
                type: number
              category:
                type: string
      responses:
        "200":
          description: Transaction updated
          schema:
            $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized, needs JWT token
        "404":
          description: Transaction not found
  /transactions/{transactionId}/notes:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Add a note to a transaction
      description: Adds notes or additional information to a specific transaction.
      parameters:
        - name: transactionId
          in: path
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Note to add
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
      responses:
        "200":
          description: Note added to the transaction
          schema:
            $ref: "#/definitions/Note"
        "401":
          description: Unauthorized, needs JWT token
        "404":
          description: Transaction not found
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      description:
        type: string
      amount:
        type: number
      date:
        type: string
      category:
        type: string
  Note:
    type: object
    properties:
      note:
        type: string
